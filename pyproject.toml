[project]
name = "type_pg"
readme = "README.md"
version = "1.0.11"
dependencies = [
    "attrs~=24.2.0",
    "python-dateutil~=2.9.0.post0",
    "attr~=0.3.2",
    "typing_extensions~=4.12.2",
    "psycopg[binary]~=3.2.3",
    "Jinja2~=3.1.4",
    "typer~=0.12.5",
    "pydantic",
    "wordninja~=2.0.0",
    "asyncpg~=0.30.0"
]


[tool.coverage.paths]
source = ["app"]

[tool.coverage.run]
branch = true
source = ["app"]
omit = [
]

[tool.coverage.report]
show_missing = true

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 119

[tool.pycln]
all = true

[tool.black]
line-length = 119
target-version = ['py311']
quiet = 0
exclude = '''
(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | \.env
    | _build
    | buck-out
    | build
    | dist
    | venv
  )/
  | foo.py           # also separately exclude a file named foo.py in
                     # the root of the project
)
'''

[tool.mypy]
python_version = "3.11"
strict = true
show_column_numbers = true
show_error_codes = true
exclude = ['venv', 'app/lib/generated', 'scripts', 'app/pim/excel_template']
disable_error_code = ["valid-type"]
plugins = [
    "pydantic.mypy"
]
explicit_package_bases = true
follow_imports = "normal"

# minimal strictness settings
check_untyped_defs = true
no_implicit_reexport = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true
warn_redundant_casts = true

# extended
warn_no_return = true
implicit_reexport = true
strict_optional = true

[[tool.mypy.overrides]]
module = [
    "ecomaiohttpclient",
    "sgqlc.*",
    "xlsxwriter.*",
    "openpyxl.*",
    "asyncpg",
    'flatten_json',
    'security',
    'cache',
    "wordninja"
]
ignore_missing_imports = true

[tool.pytest.ini_options]
env_files = ['tests/.env']
filterwarnings = [
    'ignore:There is no current event loop'
]
asyncio_mode = 'auto'

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.sdist]
include = [
    "type_pg",
]
exclude = []
